// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/Pklerik/urlshortener/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockLinksStorager is a mock of LinksStorager interface.
type MockLinksStorager struct {
	ctrl     *gomock.Controller
	recorder *MockLinksStoragerMockRecorder
}

// MockLinksStoragerMockRecorder is the mock recorder for MockLinksStorager.
type MockLinksStoragerMockRecorder struct {
	mock *MockLinksStorager
}

// NewMockLinksStorager creates a new mock instance.
func NewMockLinksStorager(ctrl *gomock.Controller) *MockLinksStorager {
	mock := &MockLinksStorager{ctrl: ctrl}
	mock.recorder = &MockLinksStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinksStorager) EXPECT() *MockLinksStoragerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockLinksStorager) Create(ctx context.Context, links []model.LinkData) ([]model.LinkData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, links)
	ret0, _ := ret[0].([]model.LinkData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockLinksStoragerMockRecorder) Create(ctx, links interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockLinksStorager)(nil).Create), ctx, links)
}

// FindShort mocks base method.
func (m *MockLinksStorager) FindShort(ctx context.Context, short string) (model.LinkData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindShort", ctx, short)
	ret0, _ := ret[0].(model.LinkData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindShort indicates an expected call of FindShort.
func (mr *MockLinksStoragerMockRecorder) FindShort(ctx, short interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindShort", reflect.TypeOf((*MockLinksStorager)(nil).FindShort), ctx, short)
}

// PingDB mocks base method.
func (m *MockLinksStorager) PingDB(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingDB", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// PingDB indicates an expected call of PingDB.
func (mr *MockLinksStoragerMockRecorder) PingDB(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingDB", reflect.TypeOf((*MockLinksStorager)(nil).PingDB), ctx)
}
